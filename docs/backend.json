
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the BloomWatch application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "displayName": {
          "type": "string",
          "description": "User's display name or username."
        },
        "regionIds": {
          "type": "array",
          "description": "References to Regions. (Relationship: User N:N Region)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "email",
        "displayName"
      ]
    },
    "Region": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Region",
      "type": "object",
      "description": "Represents a geographical region for which blooming events are monitored.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the region."
        },
        "name": {
          "type": "string",
          "description": "Name of the region."
        },
        "lat": {
          "type": "number",
          "description": "Latitude of the region."
        },
        "lon": {
          "type": "number",
          "description": "Longitude of the region."
        },
        "userIds": {
          "type": "array",
          "description": "References to Users. (Relationship: User N:N Region)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "lat",
        "lon"
      ]
    },
    "NDVIEntry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "NDVIEntry",
      "type": "object",
      "description": "Represents a single NDVI (Normalized Difference Vegetation Index) data point.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the NDVI entry."
        },
        "regionId": {
          "type": "string",
          "description": "Reference to Region. (Relationship: Region 1:N NDVIEntry)"
        },
        "month": {
          "type": "string",
          "description": "The month for which the NDVI value is recorded (e.g., 'Jan', 'Feb')."
        },
        "value": {
          "type": "number",
          "description": "The NDVI value for the specified month."
        }
      },
      "required": [
        "id",
        "regionId",
        "month",
        "value"
      ]
    },
    "BloomEvent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BloomEvent",
      "type": "object",
      "description": "Represents a blooming event, either historical or predicted.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the bloom event."
        },
        "regionId": {
          "type": "string",
          "description": "Reference to Region. (Relationship: Region 1:N BloomEvent)"
        },
        "date": {
          "type": "string",
          "description": "Date of the bloom event.",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "Type of bloom event (e.g., 'historical', 'predicted')."
        }
      },
      "required": [
        "id",
        "regionId",
        "date",
        "type"
      ]
    },
    "HistoryEvent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HistoryEvent",
      "type": "object",
      "description": "Represents a single event in a user's activity history.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the history event."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who performed the action."
        },
        "type": {
          "type": "string",
          "description": "The type of event that occurred.",
          "enum": [
            "PREDICTION",
            "ANALYSIS",
            "CLIMATE_SUMMARY"
          ]
        },
        "regionName": {
          "type": "string",
          "description": "The name of the region associated with the event."
        },
        "country": {
            "type": "string",
            "description": "The country of the event location."
        },
        "state": {
            "type": "string",
            "description": "The state of the event location."
        },
        "summary": {
            "type": "string",
            "description": "The AI-generated summary for the event."
        },
        "prediction": {
            "type": "object",
            "description": "The detailed AI prediction data."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the event was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "type",
        "regionName",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. User data is private. Includes 'id', 'email', 'displayName', and 'regionIds'.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/regions/{regionId}",
        "definition": {
          "entityName": "Region",
          "schema": {
            "$ref": "#/backend/entities/Region"
          },
          "description": "Stores region data. Includes 'id', 'name', 'lat', 'lon', and 'userIds' to indicate users with access to the region.",
          "params": [
            {
              "name": "regionId",
              "description": "The unique identifier for the region."
            }
          ]
        }
      },
      {
        "path": "/regions/{regionId}/ndvi_entries/{ndviEntryId}",
        "definition": {
          "entityName": "NDVIEntry",
          "schema": {
            "$ref": "#/backend/entities/NDVIEntry"
          },
          "description": "Stores NDVI entries for each region. Includes 'id', 'regionId', 'month', and 'value'.",
          "params": [
            {
              "name": "regionId",
              "description": "The unique identifier for the parent region."
            },
            {
              "name": "ndviEntryId",
              "description": "The unique identifier for the NDVI entry."
            }
          ]
        }
      },
      {
        "path": "/regions/{regionId}/bloom_events/{bloomEventId}",
        "definition": {
          "entityName": "BloomEvent",
          "schema": {
            "$ref": "#/backend/entities/BloomEvent"
          },
          "description": "Stores bloom events for each region. Includes 'id', 'regionId', 'date', and 'type'.",
          "params": [
            {
              "name": "regionId",
              "description": "The unique identifier for the parent region."
            },
            {
              "name": "bloomEventId",
              "description": "The unique identifier for the bloom event."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/history/{historyId}",
        "definition": {
          "entityName": "HistoryEvent",
          "schema": {
            "$ref": "#/backend/entities/HistoryEvent"
          },
          "description": "Stores a log of user activities, such as generating predictions. Data is private to each user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "historyId",
              "description": "The unique identifier for the history event."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to be secure, scalable, and easily debuggable. A new 'history' subcollection has been added under each user's document to store a log of their activities. This keeps user data private and logically grouped.  Authorization Independence is achieved through denormalization. Specifically, the `regionIds` array in the `User` document, and `userIds` array in the `Region` document are used to manage the N:N relationship between Users and Regions.  This allows rules to validate access without needing `get()` calls to other documents, thus enabling atomic operations. Structural Segregation is applied by separating different data types into distinct collections, simplifying security rules. Access Modeling uses path-based ownership for user data and membership maps where appropriate.\n\n**Explanation of Collections:**\n\n*   `/users/{userId}`: Stores user profiles.  The `userId` parameter provides clear ownership, and the profile data is private to the user.\n*   `/users/{userId}/history/{historyId}`: Stores a log of each user's activities. This data is private and only accessible by the authenticated user.\n*   `/regions/{regionId}`: Stores region data.  Includes `userIds` array to enable collaborative access and management of regions.  Allows QAPs by enabling listing of regions without needing to filter based on complex rules.\n*   `/regions/{regionId}/ndvi_entries/{ndviEntryId}`: Stores NDVI entries for each region. The `regionId` path segment ensures clear association, and data can be listed securely within the context of a region.\n*   `/regions/{regionId}/bloom_events/{bloomEventId}`: Stores bloom events for each region. The `regionId` path segment ensures clear association, and data can be listed securely within the context of a region.\n\nThis design facilitates secure `list` operations by segregating data and using path-based authorization where possible.  The data structure supports the integrity of ownership, timestamps, and denormalized data."
  }
}

    